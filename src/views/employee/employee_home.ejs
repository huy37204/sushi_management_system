<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />

    <link rel="preconnect" href="https://fonts.bunny.net" />
    <link
      href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="css/company_home.css" />
    <script src="https://cdn.tailwindcss.com"></script>

    <title>Quản lý công ty</title>
  </head>
  <body class="text-gray-800 font-inter">
    <!--sidenav -->
    <%- include('../partials/employee/employee_sidenav') %>
    <!-- end sidenav -->

    <main
      class="w-full md:w-[calc(100%-256px)] md:ml-64 bg-gray-200 min-h-screen transition-all main"
    >
      <!-- navbar -->
      <%- include('../partials/employee/employee_navbar.ejs') %>
      <!-- end navbar -->

      <!-- Content -->
      <div class="p-6">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
          <div
            class="bg-white border border-gray-100 shadow-md shadow-black/5 p-6 rounded-md lg:col-span-2"
          >
            <div class="flex justify-between mb-4 items-start">
              <div class="flex space-x-5 items-center">
                <div class="font-medium">Thống kê doanh thu</div>
                <button
                  class="bg-gradient-to-br from-white to-[#B4E9D7] hover:from-[#B4E9D7] hover:to-white p-3 rounded-xl font-bold border border-[#dddcdc] shadow-lg"
                  onclick="{
                    chooseSelectTimeType('select-for-day-container', 'day')
                  }"
                >
                  Theo Ngày
                </button>

                <button
                  class="bg-gradient-to-br from-white to-[#F77289] hover:from-[#F77289] hover:to-white p-3 rounded-xl font-bold border border-[#dddcdc] shadow-lg"
                  onclick="chooseSelectTimeType('select-for-month-container', 'month')"
                >
                  Theo Tháng
                </button>
                <button
                  class="bg-gradient-to-br from-white to-[#ca38be] hover:from-[#ca38be] hover:to-white p-3 rounded-xl font-bold border border-[#dddcdc] shadow-lg"
                  onclick="chooseSelectTimeType('select-for-quarter-container', 'quarter')"
                >
                  Theo Quý
                </button>
                <button
                  class="bg-gradient-to-br from-white to-[#689FF8] hover:from-[#689FF8] hover:to-white p-3 rounded-xl font-bold border border-[#dddcdc] shadow-lg"
                  onclick="chooseSelectTimeType('select-for-year-container', 'year')"
                >
                  Theo Năm
                </button>
              </div>

              <div class="dropdown">
                <button
                  type="button"
                  class="dropdown-toggle text-gray-400 hover:text-gray-600"
                >
                  <i class="ri-more-fill"></i>
                </button>
                <ul
                  class="dropdown-menu shadow-md shadow-black/5 z-30 hidden py-1.5 rounded-md bg-white border border-gray-100 w-full max-w-[140px]"
                >
                  <li>
                    <a
                      href="#"
                      class="flex items-center text-[13px] py-1.5 px-4 text-gray-600 hover:text-blue-500 hover:bg-gray-50"
                      >Profile</a
                    >
                  </li>
                  <li>
                    <a
                      href="#"
                      class="flex items-center text-[13px] py-1.5 px-4 text-gray-600 hover:text-blue-500 hover:bg-gray-50"
                      >Settings</a
                    >
                  </li>
                  <li>
                    <a
                      href="#"
                      class="flex items-center text-[13px] py-1.5 px-4 text-gray-600 hover:text-blue-500 hover:bg-gray-50"
                      >Logout</a
                    >
                  </li>
                </ul>
              </div>
            </div>

            <div
              class="select-time-container select-for-day-container space-x-4 items-center hidden"
            >
              <div>Chọn tháng:</div>
              <select
                name=""
                id="select-month"
                class="border border-[#2AC18F] rounded-md py-2 px-4"
                onchange="updateChart('day')"
              >
                <script>
                  const currentMonth = new Date().getMonth() + 1; // Get current month (1-12)
                  for (let i = 1; i <= 12; i++) {
                    let option = document.createElement("option");
                    option.value = i; // Đặt giá trị là số tháng để dễ xử lý
                    option.textContent = "Tháng " + i;
                    if (i === currentMonth) {
                      option.selected = true; // Set current month as selected
                    }
                    document.getElementById("select-month").appendChild(option);
                  }
                </script>
              </select>

              <div>Chọn năm:</div>
              <select
                name=""
                id="select-year"
                class="border border-[#2AC18F] rounded-md py-2 px-4"
                onchange="updateChart('day')"
              >
                <script>
                  const currentYear = new Date().getFullYear();
                  for (let i = 2000; i <= currentYear; i++) {
                    let option = document.createElement("option");
                    option.value = i; // Đặt giá trị là số tháng để dễ xử lý
                    option.textContent = "Năm " + i;
                    if (i === currentYear) {
                      option.selected = true; // Set current month as selected
                    }
                    document.getElementById("select-year").appendChild(option);
                  }
                </script>
              </select>
            </div>
            <div
              class="select-time-container select-for-month-container space-x-4 items-center hidden"
            >
              <div>Chọn năm:</div>
              <select
                name=""
                id="select-year-for-month"
                class="border border-[#F7798F] rounded-md py-2 px-4"
                onchange="updateChart('month')"
              >
                <script>
                  for (let i = 2000; i <= currentYear; i++) {
                    let option = document.createElement("option");
                    option.value = i; // Đặt giá trị là số tháng để dễ xử lý
                    option.textContent = "Năm " + i;
                    if (i === currentYear) {
                      option.selected = true; // Set current month as selected
                    }
                    document
                      .getElementById("select-year-for-month")
                      .appendChild(option);
                  }
                </script>
              </select>
            </div>
            <div
              class="select-time-container select-for-quarter-container hidden space-x-4 items-center"
            >
              <div>Chọn năm:</div>
              <select
                name=""
                id="select-year-for-quarter"
                class="border border-[#CF4AC4] rounded-md py-2 px-4"
                onchange="updateChart('quarter')"
              >
                <script>
                  for (let i = 2000; i <= currentYear; i++) {
                    let option = document.createElement("option");
                    option.value = i; // Đặt giá trị là số tháng để dễ xử lý
                    option.textContent = "Năm " + i;
                    if (i === currentYear) {
                      option.selected = true; // Set current month as selected
                    }
                    document
                      .getElementById("select-year-for-quarter")
                      .appendChild(option);
                  }
                </script>
              </select>
            </div>
            <div
              class="select-time-container select-for-year-container hidden space-x-4 items-center"
            >
              <div>Năm bắt đầu</div>
              <select
                name=""
                id="start-year"
                class="border border-indigo-600 rounded-md py-2 px-4"
                onchange="updateChart('year')"
              >
                <script>
                  for (let i = 2000; i <= currentYear; i++) {
                    let option = document.createElement("option");
                    option.value = i; // Đặt giá trị là số tháng để dễ xử lý
                    option.textContent = "Năm " + i;
                    if (i === currentYear) {
                      option.selected = true; // Set current month as selected
                    }
                    document.getElementById("start-year").appendChild(option);
                  }
                </script>
              </select>

              <div>Năm kết thúc:</div>
              <select
                name=""
                id="end-year"
                class="border border-indigo-600 rounded-md py-2 px-4"
                onchange="updateChart('year')"
              >
                <script>
                  for (let i = 2000; i <= currentYear; i++) {
                    let option = document.createElement("option");
                    option.value = i; // Đặt giá trị là số tháng để dễ xử lý
                    option.textContent = "Năm " + i;
                    if (i === currentYear) {
                      option.selected = true; // Set current month as selected
                    }
                    document.getElementById("end-year").appendChild(option);
                  }
                </script>
              </select>
            </div>
            <div
              class="w-[30%] mb-4 text-center rounded-md border border-dashed border-gray-200 p-4 mx-auto mt-5"
            >
              <div class="flex items-center justify-center mb-0.5">
                <div class="text-xl font-semibold">50 hoá đơn</div>
                <span
                  class="p-1 rounded text-[12px] font-semibold bg-emerald-500/10 text-emerald-500 leading-none ml-1"
                  >+$469</span
                >
              </div>
            </div>

            <div>
              <canvas id="order-chart"></canvas>
            </div>
          </div>
          <div
            class="bg-white border border-gray-100 shadow-md shadow-black/5 p-6 rounded-md"
          >
            <div class="flex justify-between mb-4 items-start">
              <div class="font-medium">Doanh thu</div>
              <div class="dropdown">
                <button
                  type="button"
                  class="dropdown-toggle text-gray-400 hover:text-gray-600"
                >
                  <i class="ri-more-fill"></i>
                </button>
                <ul
                  class="dropdown-menu shadow-md shadow-black/5 z-30 hidden py-1.5 rounded-md bg-white border border-gray-100 w-full max-w-[140px]"
                >
                  <li>
                    <a
                      href="#"
                      class="flex items-center text-[13px] py-1.5 px-4 text-gray-600 hover:text-blue-500 hover:bg-gray-50"
                      >Profile</a
                    >
                  </li>
                  <li>
                    <a
                      href="#"
                      class="flex items-center text-[13px] py-1.5 px-4 text-gray-600 hover:text-blue-500 hover:bg-gray-50"
                      >Settings</a
                    >
                  </li>
                  <li>
                    <a
                      href="#"
                      class="flex items-center text-[13px] py-1.5 px-4 text-gray-600 hover:text-blue-500 hover:bg-gray-50"
                      >Logout</a
                    >
                  </li>
                </ul>
              </div>
            </div>
            <div class="overflow-x-auto">
              <table class="w-full min-w-[460px]">
                <thead>
                  <tr>
                    <th
                      class="text-[12px] uppercase tracking-wide font-medium text-gray-400 py-2 px-4 bg-gray-50 text-left rounded-tl-md rounded-bl-md"
                    >
                      Giai đoạn
                    </th>
                    <th
                      class="text-[12px] uppercase tracking-wide font-medium text-gray-400 py-2 px-4 bg-gray-50 text-center"
                    >
                      Số tiền
                    </th>
                    <th
                      class="text-[12px] uppercase tracking-wide font-medium text-gray-400 py-2 px-4 bg-gray-50 rounded-tr-md rounded-br-md text-center"
                    >
                      Status
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td
                      class="py-2 px-[10px] border-b border-b-gray-50 text-start"
                    >
                      <div>
                        <a
                          href="#"
                          class="text-gray-600 text-sm font-medium hover:text-blue-500 ml-2 truncate"
                          >Ngày 1</a
                        >
                      </div>
                    </td>

                    <td class="py-2 px-4 border-b border-b-gray-50">
                      <span class="text-[13px] font-medium text-emerald-500"
                        >+ 3.000.000 VNĐ</span
                      >
                    </td>
                    <td class="border-b border-b-gray-50 text-center">
                      <span
                        class="inline-block p-1 rounded bg-emerald-500/10 text-emerald-500 font-medium text-[12px] leading-none"
                        >Pending</span
                      >
                    </td>
                  </tr>
                  <tr>
                    <td class="py-2 px-4 border-b border-b-gray-50">
                      <div class="flex items-center">
                        <img
                          src="https://placehold.co/32x32"
                          alt=""
                          class="w-8 h-8 rounded object-cover block"
                        />
                        <a
                          href="#"
                          class="text-gray-600 text-sm font-medium hover:text-blue-500 ml-2 truncate"
                          >Create landing page</a
                        >
                      </div>
                    </td>
                    <td class="py-2 px-4 border-b border-b-gray-50">
                      <span class="text-[13px] font-medium text-rose-500"
                        >-$235</span
                      >
                    </td>
                    <td class="py-2 px-4 border-b border-b-gray-50">
                      <span
                        class="inline-block p-1 rounded bg-rose-500/10 text-rose-500 font-medium text-[12px] leading-none"
                        >Withdrawn</span
                      >
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
      <!-- End Content -->
    </main>

    <script src="https://unpkg.com/@popperjs/core@2"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/js/popper.js"></script>

    <script>
      // start: Chart
      const ctx = document.getElementById("order-chart").getContext("2d");
      let chart;

      function initChart(labels, month, year) {
        chart = new Chart(ctx, {
          type: "line",
          data: {
            labels: labels,
            datasets: [
              {
                label: "Tháng " + month + " Năm " + year, // Hiển thị tháng đã chọn
                data: generateRandomData(30),
                borderWidth: 1,
                fill: true,
                pointBackgroundColor: "rgb(16, 185, 129)",
                borderColor: "rgb(16, 185, 129)",
                backgroundColor: "rgb(16 185 129 / .05)",
                tension: 0.2,
              },
            ],
          },
          options: {
            scales: {
              y: { beginAtZero: true },
            },
          },
        });
      }
      function updateChart(type) {
        let labels = [];
        let labelTitle = "";
        let borderColor = "";

        switch (type) {
          case "day": // Select theo ngày
            const selectedMonth = document.getElementById("select-month").value;
            const selectedYear = document.getElementById("select-year").value;
            labels = generateNDays(30, selectedMonth, selectedYear);
            labelTitle = `Tháng ${selectedMonth} Năm ${selectedYear}`;
            borderColor = "rgb(16, 185, 129)"; // Màu xanh lá
            backgroundColor = "rgb(16 185 129 / .05)";
            break;

          case "month": // Select theo tháng
            const selectedYearForMonth = document.getElementById(
              "select-year-for-month",
            ).value;
            labels = generateMonths();
            labelTitle = `Năm ${selectedYearForMonth}`;
            borderColor = "rgb(244, 63, 94)";
            backgroundColor = "rgba(244, 63, 94, 0.05)"; // Màu đỏ
            break;

          case "quarter": // Select theo quý
            const selectedYearForQuarter = document.getElementById(
              "select-year-for-quarter",
            ).value;
            labels = [
              "1st Quarter",
              "2nd Quarter",
              "3rd Quarter",
              "4th Quarter",
            ];
            labelTitle = `Năm ${selectedYearForQuarter}`;
            borderColor = "rgb(208,78,197)"; //Màu tím
            backgroundColor = "rgb(208,78,197, 0.05)";
            break;

          case "year": // Select theo năm
            const startYear = document.getElementById("start-year").value;
            const endYear = document.getElementById("end-year").value;
            labels = generateYears(parseInt(startYear), parseInt(endYear));
            labelTitle = `Từ năm ${startYear} đến năm ${endYear}`;
            borderColor = "rgb(79,70,229)"; // Màu xanh dương
            backgroundColor = "rgba(79,70,229, 0.05)";
            break;

          default:
            console.error("Invalid chart type");
            return;
        }

        // Cập nhật dữ liệu biểu đồ
        chart.data.labels = labels;
        chart.data.datasets[0].label = labelTitle;
        chart.data.datasets[0].data = generateRandomData(labels.length); // Dữ liệu ngẫu nhiên phù hợp số lượng nhãn
        chart.data.datasets[0].borderColor = borderColor;
        chart.data.datasets[0].backgroundColor = backgroundColor;
        chart.data.datasets[0].pointBackgroundColor = borderColor;
        chart.update(); // Cập nhật biểu đồ
      }

      function generateNDays(n, month) {
        const data = [];
        const date = new Date();
        date.setMonth(month - 1); // Set the month based on selection
        for (let i = 0; i < n; i++) {
          date.setDate(i + 1); // Set day within the month
          data.push(
            date.toLocaleString("en-US", { month: "short", day: "numeric" }),
          );
        }
        return data;
      }

      function generateRandomData(n) {
        const data = [];
        for (let i = 0; i < n; i++) {
          data.push(Math.round(Math.random() * 10));
        }
        return data;
      }

      // Hàm tạo mảng các tháng
      function generateMonths() {
        return [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ];
      }

      // Hàm tạo mảng các năm trong khoảng
      function generateYears(startYear, endYear) {
        const years = [];
        for (let i = startYear; i <= endYear; i++) {
          years.push(i.toString());
        }
        return years;
      }

      // Khởi tạo biểu đồ với tháng hiện tại
      initChart(
        generateNDays(30, new Date().getMonth() + 1),
        new Date().getMonth() + 1,
        new Date().getFullYear(),
      );
      // end: Chart

      // Hide time select
      function chooseSelectTimeType(className, type) {
        var container = document.querySelector(`.${className}`);
        if (container.classList.contains("hidden")) {
          document
            .querySelectorAll(".select-time-container")
            .forEach((el) => el.classList.replace("flex", "hidden"));
          container.classList.replace("hidden", "flex");
          updateChart(type);
        } else container.classList.replace("flex", "hidden");
      }
    </script>
    <script src="/js/sidebar.js"></script>
  </body>
</html>
