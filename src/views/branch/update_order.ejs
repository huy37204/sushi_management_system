<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />

    <link rel="preconnect" href="https://fonts.bunny.net" />
    <link
      href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/branch_home.css" />
    <link rel="stylesheet" href="/css/output.css" />

    <title>Quản lý phiếu đặt món</title>
  </head>
  <body class="text-gray-800 font-inter">
    <!--sidenav -->
    <%- include('../partials/branch/branch_side_nav') %>
    <!-- end sidenav -->

    <main
      class="w-full md:w-[calc(100%-256px)] md:ml-64 bg-gray-200 min-h-screen transition-all main"
    >
      <!-- Navbar -->
      <%- include('../partials/branch/branch_navbar') %>
      <!-- End Navbar -->

      <!-- Content -->
      <div class="mx-10 mt-10">
        <!-- Title -->
        <div class="text-[30px] font-semibold text-[#374151]">
          Cập nhật phiếu đặt món
        </div>
        <form action="/branch/<%=branchId%>/order-form/update" method="POST">
          <div class="flex w-full space-x-4">
            <!-- Hiển thị Order ID -->
            <div class="flex flex-col w-[50%]">
              <label for="orderId">Mã phiếu:</label>
              <input
                id="orderId"
                type="text"
                name="orderId"
                value="<%= orderId %>"
                readonly
                class="w-full bg-gray-100 border border-gray-300 rounded px-2 py-1"
              />
            </div>

            <!-- Hiển thị Order Type -->
            <div class="flex flex-col w-[50%]">
              <label for="orderType">Loại phiếu:</label>
              <input
                id="orderType"
                type="text"
                name="orderType"
                value="<%= orderType %>"
                readonly
                class="w-full bg-gray-100 border border-gray-300 rounded px-2 py-1"
              />
            </div>
          </div>

          <div class="flex w-full space-x-4 mt-4">
            <!-- Hiển thị Order Date -->
            <div class="flex flex-col w-[50%]">
              <label for="orderDate">Ngày đặt:</label>
              <input
                id="orderDate"
                type="text"
                name="orderDate"
                value="<%= new Date(orderDate).toLocaleDateString('vi-VN') %>"
                readonly
                class="w-full bg-gray-100 border border-gray-300 rounded px-2 py-1"
              />
            </div>

            <!-- Hiển thị Order Time -->
            <div class="flex flex-col w-[50%]">
              <label for="orderTime">Giờ đặt:</label>
              <input
                id="orderTime"
                type="text"
                name="orderTime"
                value="<%= new Date(orderTime).toLocaleTimeString('vi-VN', {
                      hour: '2-digit',
                      minute: '2-digit',
                      second: '2-digit'
                    }) %>"
                readonly
                class="w-full bg-gray-100 border border-gray-300 rounded px-2 py-1"
              />
            </div>
          </div>
          <div class="text-center">
            <h2 class="text-[40px] font-bold mt-4">Chọn món</h2>
          </div>

          <div class="flex justify-end mt-8 mb-4 space-x-4">
            <input
              type="text"
              id="search-dish"
              placeholder="Tìm theo tên món..."
              class="py-2 px-4 rounded-lg border focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
            <select
              name="select-category"
              id="select-category"
              class="py-2 rounded-lg"
            >
              <option value="all">Tất cả</option>
              <% categoriesWithDishes.forEach((category) => { %>
              <option value="<%= category.categoryName %>">
                <%= category.categoryName %>
              </option>
              <% }) %>
            </select>
          </div>

          <div id="menu-items">
            <% categoriesWithDishes.forEach((category) => { %>
            <div
              class="category-container mb-12"
              id="category-<%= category.categoryName %>"
              style="display: none"
            >
              <h2 class="text-2xl font-bold text-black text-center">
                <%= category.categoryName %>
              </h2>
              <div class="menu-category my-10">
                <div class="grid grid-cols-4 gap-6">
                  <% const sortedDishes = category.dishes.sort((a, b) =>
                  b.QUANTITY - a.QUANTITY); sortedDishes.forEach((dish) => { %>
                  <div
                    class="dish-card border rounded-lg p-4 text-center bg-white flex-col items-center"
                  >
                    <img
                      src="https://sacus.vn/wp-content/uploads/2019/06/no-image.jpg"
                      alt="<%= dish.DISH_NAME %>"
                      class="w-full h-40 object-cover rounded-md mb-4"
                    />
                    <h3 class="text-lg font-semibold text-gray-800 mb-2">
                      <%= dish.DISH_NAME %>
                    </h3>
                    <p class="text-red-500 text-lg font-bold">
                      <%= dish.DISH_PRICE.toLocaleString('vi-VN') %>đ
                    </p>
                    <div class="flex justify-center mt-4">
                      <input
                        type="hidden"
                        name="dishes[<%= dish.dishId %>][id]"
                        value="<%= dish.DISH_ID %>"
                      />
                      <div class="flex items-center max-w-[8rem]">
                        <button
                          type="button"
                          class="decrement-btn bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 border border-gray-300 rounded-s-lg p-3 h-11 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none"
                        >
                          <svg
                            class="w-3 h-3 text-gray-900 dark:text-white"
                            aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 18 2"
                          >
                            <path
                              stroke="currentColor"
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M1 1h16"
                            />
                          </svg>
                        </button>
                        <input
                          type="number"
                          name="dishes[<%= dish.dishId %>][quantity]"
                          class="quantity-input bg-gray-50 border-x-0 border-gray-300 h-11 text-center text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block w-full py-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                          value="<%= dish.QUANTITY %>"
                          min="0"
                          max="50"
                          required
                        />
                        <button
                          type="button"
                          class="increment-btn bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 border border-gray-300 rounded-e-lg p-3 h-11 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none"
                        >
                          <svg
                            class="w-3 h-3 text-gray-900 dark:text-white"
                            aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 18 18"
                          >
                            <path
                              stroke="currentColor"
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M9 1v16M1 9h16"
                            />
                          </svg>
                        </button>
                      </div>
                    </div>
                  </div>
                  <% }) %>
                </div>
              </div>
            </div>
            <% }) %>
          </div>

          <div class="flex justify-center mt-10">
            <button
              type="submit"
              class="focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-[50px] py-2.5 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800"
            >
              Cập nhật
            </button>
          </div>
        </form>
      </div>
    </main>

    <script src="https://unpkg.com/@popperjs/core@2"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/js/sidebar.js"></script>
    <script src="/js/popper.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const dishCards = document.querySelectorAll(".dish-card");

        dishCards.forEach((card) => {
          const decrementBtn = card.querySelector(".decrement-btn");
          const incrementBtn = card.querySelector(".increment-btn");
          const quantityInput = card.querySelector(".quantity-input");

          decrementBtn.addEventListener("click", () => {
            let quantity = parseInt(quantityInput.value, 10) || 0;
            if (quantity > 0) {
              quantityInput.value = quantity - 1;
            }
          });

          incrementBtn.addEventListener("click", () => {
            let quantity = parseInt(quantityInput.value, 10) || 0;
            if (quantity < 50) {
              quantityInput.value = quantity + 1;
            }
          });
        });
      });
      document.addEventListener("DOMContentLoaded", () => {
        const selectCategory = document.getElementById("select-category");
        const allCategories = document.querySelectorAll(".category-container");

        // Hiển thị tất cả khi chưa chọn
        showCategory("all");

        // Lắng nghe sự kiện thay đổi của dropdown
        selectCategory.addEventListener("change", (event) => {
          const selectedCategory = event.target.value;
          showCategory(selectedCategory);
        });

        function showCategory(category) {
          allCategories.forEach((categoryContainer) => {
            const categoryId = categoryContainer.id.replace("category-", "");
            if (category === "all" || categoryId === category) {
              categoryContainer.style.display = "block";
            } else {
              categoryContainer.style.display = "none";
            }
          });
        }
      });
    </script>
    <script>
      const searchInput = document.getElementById("search-dish");
      const categorySelect = document.getElementById("select-category");
      const menuItemsContainer = document.getElementById("menu-items");
      const categoryContainers = document.querySelectorAll(
        ".category-container",
      );

      // Hàm lọc món ăn
      function filterDishes() {
        const searchValue = searchInput.value.trim().toLowerCase();
        const selectedCategory = categorySelect.value;

        categoryContainers.forEach((categoryContainer) => {
          const categoryName = categoryContainer.id.replace("category-", "");
          const isCategoryMatch =
            selectedCategory === "all" || categoryName === selectedCategory;

          if (!isCategoryMatch) {
            categoryContainer.style.display = "none";
            return;
          }

          const dishes = categoryContainer.querySelectorAll(".dish-card");
          let hasVisibleDishes = false;

          dishes.forEach((dish) => {
            const dishName = dish.querySelector("h3").textContent.toLowerCase();
            const isMatch = dishName.includes(searchValue);

            if (isMatch) {
              dish.style.display = "flex"; // Hiển thị món
              hasVisibleDishes = true;
            } else {
              dish.style.display = "none"; // Ẩn món
            }
          });

          // Hiển thị hoặc ẩn danh mục nếu có món phù hợp
          categoryContainer.style.display = hasVisibleDishes ? "block" : "none";
        });
      }

      // Lắng nghe sự kiện khi nhập hoặc thay đổi danh mục
      searchInput.addEventListener("input", filterDishes);
      categorySelect.addEventListener("change", filterDishes);
    </script>
  </body>
</html>
